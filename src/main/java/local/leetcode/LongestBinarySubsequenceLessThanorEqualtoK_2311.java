package local.leetcode;

public class LongestBinarySubsequenceLessThanorEqualtoK_2311 {
    public int longestSubsequence(String s, int k) {
        int count=0;
        long value=0;
        long power=1;
        long MAX_POWER= 1_000_000_000;
        for(int i= s.length()-1; i>=0;i--){
            if(value<=k){
                if(s.charAt(i)=='1') {
                    value += power;
                }
                power*=2;
                if(power>= MAX_POWER)
                    value= MAX_POWER;
            }
            if(s.charAt(i)=='0' || value<=k) count++;
        }
        return count;
    }

    public static void main(String[] args) {
        String s
        int k=1;
        System.out.println(new LongestBinarySubsequenceLessThanorEqualtoK_2311().longestSubsequence(s, k));
    }
}
